<html>
    <head>
        <title> QuickJS </title>

        <script type="text/javascript" src="../quick_tokenizer.js"></script>
        <script type="text/javascript" src="../quick_compiler.js"></script>
        <script type="text/javascript" src="../quick_dom.js"></script>
        <script type="text/javascript" src="../quick_helper.js"></script>
        <script type="text/javascript" src="../quick.js"></script>

        <script type="text/javascript">

        function init () {
            Quick.useQueryFlags();
            Quick.compileScriptTags();
        }


        // animation frame shim
        window.requestAnimFrame = (function () {
            return window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                window.mozRequestAnimationFrame ||
                window.oRequestAnimationFrame ||
                window.msRequestAnimationFrame ||
                function (callback) {
                    window.setTimeout(callback, 1000 / 60);
                };
            })();

        var animations = [];

        function advance() {
            requestAnimFrame(advance);

            var a;
            for (a in animations) {
                animations[a].advance();
            }
        }

        // start the animation loop
        advance();

        function pulseInit(element) {
            var a = {};
            a.running = false;
            a.element = element;
            a.pulseIn = false;
            a.advance = function () {
                var e = this.element;
                var o = e.opacity;

                if (!this.running && o >= 1) {
                    return;
                }

                if (e.pulseIn) {
                    e.opacity = o + 0.03;
                } else {
                    e.opacity = o - 0.03;
                }

                if (o <= 0.2 && !e.pulseIn) {
                    e.pulseIn = true;
                } else if (o >= 1 && e.pulseIn) {
                    e.pulseIn = false;
                }
            }
            animations.push(a);
            return a;
        }

        </script>

        <script type="text/jml">

        MyDelegate @ Item {
            top: 0 + (this.modelData * (this.height + 2));
            left: 10
            width: 700;
            height: 70
            backgroundColor: "#00aeef"
            onmouseover: this.a.running = true;
            onmouseout: this.a.running = false;
            onload: this.a = pulseInit(this);
            hoverEnabled: true
            scale: this.opacity

            Image {
                id: delegateImage
                src: "person.png"
                width: 64
                height: 64
                left: 20
                top: this.parent.verticalCenter - this.verticalCenter
            }

            Text {
                id: delegateText
                text: "Delegate " + this.parent.modelData + " and a bit more..."
                color: "white"
                fontSize: 24
                left: this.delegateImage.right + 10
                top: this.parent.verticalCenter - this.verticalCenter
            }
        }

        Item {
            delegate: MyDelegate;
            model: 200;

            onload: ^{
                for (var i = 0; i < this.model; ++i) {
                    var child = this.createdelegate();
                    child.modelData = i;
                    this.addChild(child);
                    child.initializeBindings();
                }
            }^
        }

        </script>

    </head>

    <body onload="init();">
    </body>
</html>

