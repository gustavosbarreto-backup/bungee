#!/usr/bin/env node

/*jshint globalstrict: true*/
/*jshint node: true*/

"use strict";

var quick = require('../');
var util = require('util');
var fs = require('fs');
var optimist = require('optimist');
var argv = optimist.usage('Usage: $0 [input] [output]')
    .alias('h', 'help')
    .describe('h', 'Show this help.')
    .boolean('s')
    .default('s', false)
    .alias('s', ['silent', 'quiet'])
    .describe('s', 'Suppress console output.')
    .alias('e', 'event')
    .describe('e', 'Defer script evaluation until DOM event is fired')
    .string('e')
    .argv;

if (argv._.length <= 1 || argv.h) {
    optimist.showHelp();
    process.exit(1);
}

var input = argv._[0];
var output = argv._[1];
var log = !argv.s;
var options = {}

log && console.log("Compile '" + input + "' to '" + output + "' ...");

if (argv.e) {
    log && console.log(" Script evaluation will wait for event '" + argv.e + "'.");
    options.event = argv.e;
} else {
    log && console.log(" Script will be evaluated immediately.");
}

quick.compileFile(input, options, function (error, result) {
    if (error) {
        console.error("");
        console.error("Error: " + input + ":" + error.line);
        console.error("> '" + error.context + "'");
        console.error(" " + error.message);
        console.error("");

        process.exit(2);
    }

    fs.writeFile(output, result, function (error) {
        if (error) {
            console.error(util.inspect(error));
            process.exit(3);
        }

        log && console.log("Done.");
        process.exit(0);
    });
});
